(ns pong.blkchars
  (:require [pong.prep :as pr]
            ))

(declare block-characters)

(defn write-text [ctx x y text & {:keys [size color]
                                  :or {size pr/grid-size color "#FFF"}}]
(dotimes [i (count text)]
    (pr/fill-seq ctx (+ x (* i 4 size)) y
              (get-in block-characters (.toUpperCase (nth text i)))
              :size size :color color)))


(def block-characters {
  "A" [[1, 1, 1],[1, 0, 1],[1, 1, 1],[1, 0, 1],[1, 0, 1]],
  "B" [[1, 1, 0],[1, 0, 1],[1, 1, 0],[1, 0, 1],[1, 1, 0]],
  "C" [[0, 1, 1],[1, 0, 0],[1, 0, 0],[1, 0, 0],[0, 1, 1]],
  "D" [[1, 1, 0],[1, 0, 1],[1, 0, 1],[1, 0, 1],[1, 1, 0]],
  "E" [[1, 1, 1],[1, 0, 0],[1, 1, 0],[1, 0, 0],[1, 1, 1]],
  "F" [[1, 1, 1],[1, 0, 0],[1, 1, 0],[1, 0, 0],[1, 0, 0]],
  "G" [[1, 1, 1],[1, 0, 0],[1, 0, 1],[1, 0, 1],[1, 1, 1]],
  "H" [[1, 0, 1],[1, 0, 1],[1, 1, 1],[1, 0, 1],[1, 0, 1]],
  "I" [[0, 1, 0],[0, 1, 0],[0, 1, 0],[0, 1, 0],[0, 1, 0]],
  "J" [[0, 0, 1],[0, 0, 1],[0, 0, 1],[1, 0, 1],[1, 1, 1]],
  "K" [[1, 0, 1],[1, 0, 1],[1, 1, 0],[1, 0, 1],[1, 0, 1]],
  "L" [[1, 0, 0],[1, 0, 0],[1, 0, 0],[1, 0, 0],[1, 1, 1]],
  "M" [[1, 0, 1],[1, 1, 1],[1, 1, 1],[1, 0, 1],[1, 0, 1]],
  "N" [[1, 0, 1],[1, 1, 1],[1, 0, 1],[1, 0, 1],[1, 0, 1]],
  "O" [[1, 1, 1],[1, 0, 1],[1, 0, 1],[1, 0, 1],[1, 1, 1]],
  "P" [[1, 1, 0],[1, 0, 1],[1, 1, 0],[1, 0, 0],[1, 0, 0]],
  "Q" [[1, 1, 1],[1, 0, 1],[1, 0, 1],[1, 1, 0],[0, 0, 1]],
  "R" [[1, 1, 0],[1, 0, 1],[1, 1, 1],[1, 1, 0],[1, 0, 1]],
  "S" [[0, 1, 1],[1, 0, 0],[0, 1, 0],[0, 0, 1],[1, 1, 0]],
  "T" [[1, 1, 1],[0, 1, 0],[0, 1, 0],[0, 1, 0],[0, 1, 0]],
  "U" [[1, 0, 1],[1, 0, 1],[1, 0, 1],[1, 0, 1],[1, 1, 1]],
  "V" [[1, 0, 1],[1, 0, 1],[1, 0, 1],[1, 0, 1],[0, 1, 0]],
  "Y" [[1, 0, 1],[1, 0, 1],[0, 1, 0],[0, 1, 0],[0, 1, 0]],
  "X" [[1, 0, 1],[1, 0, 1],[0, 1, 0],[1, 0, 1],[1, 0, 1]],
  "W" [[1, 0, 1],[1, 0, 1],[1, 1, 1],[1, 1, 1],[1, 0, 1]],
  "Z" [[1, 1, 1],[0, 0, 1],[0, 1, 0],[1, 0, 0],[1, 1, 1]],
  "1" [[0, 1, 0],[1, 1, 0],[0, 1, 0],[0, 1, 0],[0, 1, 0]],
  "2" [[1, 1, 0],[0, 0, 1],[0, 1, 0],[1, 0, 0],[1, 1, 1]],
  "3" [[1, 1, 0],[0, 0, 1],[0, 1, 0],[0, 0, 1],[1, 1, 0]],
  "4" [[1, 0, 1],[1, 0, 1],[1, 1, 1],[0, 0, 1],[0, 0, 1]],
  "5" [[1, 1, 1],[1, 0, 0],[1, 1, 1],[0, 0, 1],[1, 1, 0]],
  "6" [[0, 1, 1],[1, 0, 0],[1, 1, 1],[1, 0, 1],[1, 1, 1]],
  "7" [[1, 1, 1],[0, 0, 1],[0, 0, 1],[0, 0, 1],[0, 0, 1]],
  "8" [[1, 1, 1],[1, 0, 1],[1, 1, 1],[1, 0, 1],[1, 1, 1]],
  "9" [[1, 1, 1],[1, 0, 1],[1, 1, 1],[0, 0, 1],[0, 0, 1]],
  "0" [[1, 1, 1],[1, 0, 1],[1, 0, 1],[1, 0, 1],[1, 1, 1]],
  "!" [[1, 0, 0],[1, 0, 0],[1, 0, 0],[0, 0, 0],[1, 0, 0]],
  " " [[0, 0, 0],[0, 0, 0],[0, 0, 0],[0, 0, 0],[0, 0, 0]],
  "." [[0, 0, 0],[0, 0, 0],[0, 0, 0],[0, 0, 0],[1, 0, 0]],
  "," [[0, 0, 0],[0, 0, 0],[0, 0, 0],[0, 1, 0],[1, 0, 0]],
  "'" [[0, 1, 0],[0, 1, 0],[0, 0, 0],[0, 0, 0],[0, 0, 0]],
  "_" [[0, 0, 0],[0, 0, 0],[0, 0, 0],[0, 0, 0],[1, 1, 1]],
  "-" [[0, 0, 0],[0, 0, 0],[1, 1, 1],[0, 0, 0],[0, 0, 0]],
  "+" [[0, 0, 0],[0, 1, 0],[1, 1, 1],[0, 1, 0],[0, 0, 0]],
  "/" [[0, 0, 1],[0, 0, 1],[0, 1, 0],[1, 0, 0],[1, 0, 0]],
  "*" [[0, 0, 0],[1, 0, 1],[0, 1, 0],[1, 0, 1],[0, 0, 0]],
  "=" [[0, 0, 0],[1, 1, 1],[0, 0, 0],[1, 1, 1],[0, 0, 0]],
  "?" [[1, 1, 0],[0, 0, 1],[0, 1, 0],[0, 0, 0],[0, 1, 0]],
  "(" [[0, 0, 1],[0, 1, 0],[0, 1, 0],[0, 1, 0],[0, 0, 1]],
  ")" [[1, 0, 0],[0, 1, 0],[0, 1, 0],[0, 1, 0],[1, 0, 0]],
  "[" [[0, 1, 1],[0, 1, 0],[0, 1, 0],[0, 1, 0],[0, 1, 1]],
  "]" [[1, 1, 0],[0, 1, 0],[0, 1, 0],[0, 1, 0],[1, 1, 0]],
  ":" [[0, 0, 0],[0, 1, 0],[0, 0, 0],[0, 1, 0],[0, 0, 0]],
  "<" [[0, 0, 1],[0, 1, 0],[1, 0, 0],[0, 1, 0],[0, 0, 1]],
  ">" [[1, 0, 0],[0, 1, 0],[0, 0, 1],[0, 1, 0],[1, 0, 0]]
})
